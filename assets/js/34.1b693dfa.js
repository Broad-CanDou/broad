(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{356:function(s,t,a){"use strict";a.r(t);var _=a(3),v=Object(_.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"mysql事务"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql事务"}},[s._v("#")]),s._v(" Mysql事务")]),s._v(" "),t("h2",{attrs:{id:"mysql事务的隔离级别有哪几种"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mysql事务的隔离级别有哪几种"}},[s._v("#")]),s._v(" "),t("strong",[s._v("Mysql事务的隔离级别有哪几种?")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("READ UNCOMMITTED(读未提交)")]),s._v(": 在该隔离级别中,所有事务都可以读到其他未提交事务的执行结果。"),t("strong",[s._v("不能避免脏读,不可重复读,幻读")]),s._v("。")]),s._v(" "),t("li",[t("strong",[s._v("READ COMMITTED(读已提交)")]),s._v(": 在该隔离级别中,一个事务只能读到其他事务已提交过的结果。满足了隔离性的简单定义。"),t("strong",[s._v("可以避免脏读但是不可重复读,幻读仍然存在")]),s._v("。")]),s._v(" "),t("li",[t("strong",[s._v("REPEATABLE READ(可重复读)")]),s._v(": 事务A读取到一条数据后,此时事务B对该数据进行了修改并提交。那么事务A再次读取时读到的还是原来的内容。"),t("strong",[s._v("可以避免脏读,不可重复读。但幻读问题仍然存在。Mysql的默认级别")])]),s._v(" "),t("li",[t("strong",[s._v("SERIALIZABLE(串行化)")]),s._v(": 确保事务可以从一个表中读取相同的行,在这个事务持续期间，禁止其他事务对该表执行插入,更新,删除操作。所有的并发问题都可以避免。但性能十分低下。"),t("strong",[s._v("能避免脏读,不可重复读,幻读")]),s._v("。")])]),s._v(" "),t("h2",{attrs:{id:"脏读-不可重复读-幻读什么意思"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#脏读-不可重复读-幻读什么意思"}},[s._v("#")]),s._v(" "),t("strong",[s._v("脏读,不可重复读,幻读什么意思?")])]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("脏读")]),s._v(": 一个事务A可以读取到另一个事务B修改后还未提交的数据。一旦事务B回滚那事务A读取到的数据就是错的。称为脏读。")]),s._v(" "),t("li",[t("strong",[s._v("不可重复读")]),s._v(": 总的说就是我们重复去读取数据的时候读取的数据不一样。当我们读取时另一个session在修改数据。导致每次结果不一样。这就是不可重复读。")]),s._v(" "),t("li",[t("strong",[s._v("幻读")]),s._v(": sessionA在读取数据时,sessionB在插入数据。那么sessionA读取的时候每次都会多几行数据。这就是幻读(幻读强调 多出来的数据)")])]),s._v(" "),t("h2",{attrs:{id:"如何改变mysql的自动提交模式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何改变mysql的自动提交模式"}},[s._v("#")]),s._v(" 如何改变Mysql的自动提交模式?")]),s._v(" "),t("ul",[t("li",[s._v("命令: "),t("strong",[s._v("set AUTOCOMMIT=0")]),s._v(" 禁止自动提交")]),s._v(" "),t("li",[s._v("命令: "),t("strong",[s._v("set AUTOCOMMIT=1")]),s._v(" 开启自动提交")])]),s._v(" "),t("h2",{attrs:{id:"如何查看隔离级别和设置隔离级别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何查看隔离级别和设置隔离级别"}},[s._v("#")]),s._v(" 如何查看隔离级别和设置隔离级别？")]),s._v(" "),t("h3",{attrs:{id:"查看命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查看命令"}},[s._v("#")]),s._v(" 查看命令")]),s._v(" "),t("ul",[t("li",[s._v("show variables like 'transaction_isolation' Mysql5.7.20版本之后")]),s._v(" "),t("li",[s._v("show variables like 'tx_isolation'   Mysql5.7.20版本之前")]),s._v(" "),t("li",[s._v("select @@transaction_isolation 什么版本都可以使用")])]),s._v(" "),t("h3",{attrs:{id:"修改命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#修改命令"}},[s._v("#")]),s._v(" 修改命令")]),s._v(" "),t("ul",[t("li",[s._v("set global transaction_isolation ='read-committed'")])]),s._v(" "),t("div",{staticClass:"custom-block note"},[t("p",{staticClass:"custom-block-title"},[s._v("笔记")]),s._v(" "),t("p",[s._v("参数:\nread-committed"),t("br"),s._v("\nread-uncommitted"),t("br"),s._v("\nrepeatable-read"),t("br"),s._v("\nserializable"),t("br")])])])}),[],!1,null,null,null);t.default=v.exports}}]);