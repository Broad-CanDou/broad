(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{365:function(a,s,h){"use strict";h.r(s);var t=h(3),e=Object(t.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h2",{attrs:{id:"关于hashset面试题总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于hashset面试题总结"}},[a._v("#")]),a._v(" 关于HashSet面试题总结")]),a._v(" "),s("h3",{attrs:{id:"hashset底层过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashset底层过程"}},[a._v("#")]),a._v(" HashSet底层过程")]),a._v(" "),s("p",[a._v("HashSet的底层其实就是HashMap,上述总结搬过来，大家可以在进行细化大概范围的给面试官捣鼓捣鼓===")]),a._v(" "),s("ol",[s("li",[a._v("其实大家看看HashSet的底层，可以看到里面就是HashMap。")]),a._v(" "),s("li",[a._v("添加元素要先得到hash值然后转成索引值。")]),a._v(" "),s("li",[a._v("找到table存储表，看这个索引位置是否存在数据")]),a._v(" "),s("li",[a._v("没有数据时，直接加入当前索引位置")]),a._v(" "),s("li",[a._v("如果有数据 调用equals方法比较，相同值的话就会放弃添加，不相同的值会将添加到相同值的后面。")]),a._v(" "),s("li",[a._v("在java8中若一条链表的元素个数到达8个TREEIFY_THRESHOLD默认是8，并且table的大小>=MIN_TREEIFY_CAPACITY(默认64)就会进行转化红黑树。")])]),a._v(" "),s("h3",{attrs:{id:"hashset在什么时候会转红黑树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashset在什么时候会转红黑树"}},[a._v("#")]),a._v(" HashSet在什么时候会转红黑树？")]),a._v(" "),s("p",[a._v("我看一些博主对着一点表达的不是很准确。一般都说是在链表长度大于8的时候会转换红黑树。\n这么说是错误的。少了关键的一条，"),s("strong",[a._v("转红黑树的条件是，在链表大于等于8的时候并且table数组的大小到达64的\n时候才会转换成红黑树。即使链表长度够了，但是table大小不够也不会转换 而是将table数组扩容")])]),a._v(" "),s("h3",{attrs:{id:"hashset可以添加null吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashset可以添加null吗"}},[a._v("#")]),a._v(" HashSet可以添加null吗？")]),a._v(" "),s("p",[a._v("可以，但是只能添加一个。因为hashset中的值是不能重复的。")]),a._v(" "),s("h3",{attrs:{id:"hashset添加的值是有序的吗"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashset添加的值是有序的吗"}},[a._v("#")]),a._v(" HashSet添加的值是有序的吗？")]),a._v(" "),s("p",[a._v("值是无序的。")]),a._v(" "),s("h3",{attrs:{id:"hashset和hashmap的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashset和hashmap的区别"}},[a._v("#")]),a._v(" HashSet和hashMap的区别")]),a._v(" "),s("ul",[s("li",[a._v("hashSet存储对象，hashMap存储键值对")]),a._v(" "),s("li",[a._v("hashSet使用add方法添加，hashMap使用put方法")]),a._v(" "),s("li",[a._v("hashSet不能添加重复的值，hashMap可以添加重复的value但是key值不能重复")])]),a._v(" "),s("h2",{attrs:{id:"关于hashmap面试题总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#关于hashmap面试题总结"}},[a._v("#")]),a._v(" 关于HashMap面试题总结")]),a._v(" "),s("h3",{attrs:{id:"hashmap和hashtable有什么区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hashmap和hashtable有什么区别"}},[a._v("#")]),a._v(" HashMap和HashTable有什么区别?")]),a._v(" "),s("ol",[s("li",[a._v("HashMap是线程不安全的,HashTable是线程安全的;")]),a._v(" "),s("li",[a._v("由于线程安全,所以HashTable的效率比不上HashMap;")]),a._v(" "),s("li",[a._v("HashMap最多只允许一条记录的键为null,允许多条记录的值为null,而HashTable不允许;")]),a._v(" "),s("li",[a._v("HashMap默认初始化数组的大小为16,HashTable为11,前者扩容时,扩大两倍,后者扩大两倍+1;")]),a._v(" "),s("li",[a._v("HashMap需要重新计算hash值,而HashTable直接使用对象的hashCode;")])])])}),[],!1,null,null,null);s.default=e.exports}}]);