(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{321:function(t,a,v){t.exports=v.p+"assets/img/字节码.f41df813.png"},358:function(t,a,v){"use strict";v.r(a);var _=v(3),s=Object(_.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"关于java中一些基础面试题-上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#关于java中一些基础面试题-上"}},[t._v("#")]),t._v(" 关于java中一些基础面试题(上)")]),t._v(" "),a("h2",{attrs:{id:"基础概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础概念"}},[t._v("#")]),t._v(" 基础概念")]),t._v(" "),a("h3",{attrs:{id:"jvm-jdk-jre"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm-jdk-jre"}},[t._v("#")]),t._v(" JVM && JDK && JRE")]),t._v(" "),a("h4",{attrs:{id:"jvm"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jvm"}},[t._v("#")]),t._v(" JVM")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("JVM")]),t._v(" "),a("ul",[a("li",[t._v("java 虚拟机 (JVM) 是运行java字节码的虚拟机。是一种用于计算设备的规范，它是一个虚构出来的计算机，引入JVM后，Java语言在不同平台上运行时不需要重新编译。JVM是Java跨平台的核心。")]),t._v(" "),a("li",[t._v("JVM是Java编程语言的核心。当我们运行一个程序时，JVM负责将字节码转换为特定机器代码。JVM也是平台特定的，并提供核心的Java方法，例如内存管理、垃圾回收和安全机制等。JVM 是可定制化的，我们可以通过Java 选项(java options)定制它，比如配置JVM 内存的上下界。JVM之所以被称为虚拟的是因为它提供了一个不依赖于底层操作系统和机器硬件的接口。")])])]),t._v(" "),a("h4",{attrs:{id:"jdk"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jdk"}},[t._v("#")]),t._v(" JDK")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("JDK")]),t._v(" "),a("ul",[a("li",[t._v("JDK 是 Java Development Kit 缩写，它是功能齐全的 Java SDK。它拥有 JRE 所拥有的一切，还有编译器（javac）和工具（如 javadoc 和 jdb）。它能够创建和编译程序。")]),t._v(" "),a("li",[t._v("Java开发工具包是Java环境的核心组件，并提供编译、调试和运行一个Java程序所需的所有工具，可执行文件和二进制文件。JDK是一个平台特定的软件，有针对Windows，Mac和Unix系统的不同的安装包。可以说JDK是JRE的超集，它包含了JRE的Java编译器，调试器和核心类。")])])]),t._v(" "),a("h4",{attrs:{id:"jre"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jre"}},[t._v("#")]),t._v(" JRE")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("JRE")]),t._v(" "),a("ul",[a("li",[t._v("JRE（Java Runtime Environment）是一个安装包，它提供了一个环境，只在你的机器上运行（而不是开发） java程序（或应用程序）。JRE 仅供那些只想运行作为系统最终用户的 Java 程序的人使用。")]),t._v(" "),a("li",[t._v("JRE 是 Java 运行时环境。它是运行已编译 Java 程序所需的所有内容的集合，包括 Java 虚拟机（JVM），Java 类库，java 命令和其他的一些基础构件。但是，它不能用于创建新程序")])])]),t._v(" "),a("h3",{attrs:{id:"字节码是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字节码是什么"}},[t._v("#")]),t._v(" 字节码是什么？")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("字节码")]),t._v(" "),a("ul",[a("li",[t._v("咱们常说的文件以.class为后缀的就是字节码文件，通常我们写的java程序文件.java。通过编译后变为.class文件。而这个字节码文件(.class)只能jvm去识别，换句话说只面向虚拟机。"),a("a",{attrs:{href:"https://baike.baidu.com/item/%E8%99%9A%E6%8B%9F%E6%9C%BA/104440?fr=aladdin"}},[t._v("虚拟机(jvm)")]),t._v("内部在对字节码文件去处理识别最终运行展现。")]),t._v(" "),a("li",[t._v("字节码（Byte-code）是一种包含执行程序，由一序列 op 代码/数据对组成的二进制文件，是一种中间码。字节是电脑里的数据量单位。\n"),a("strong",[t._v("如下图简简略图")]),t._v(" "),a("img",{attrs:{src:v(321)}})])])]),t._v(" "),a("h2",{attrs:{id:"基础语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基础语法"}},[t._v("#")]),t._v(" 基础语法")]),t._v(" "),a("h3",{attrs:{id:"注释有几种方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注释有几种方式"}},[t._v("#")]),t._v(" 注释有几种方式?")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("注释")]),t._v(" "),a("p",[t._v("java 注释有三种方式:")]),t._v(" "),a("ul",[a("li",[t._v("单行注释")]),t._v(" "),a("li",[t._v("多行注释")]),t._v(" "),a("li",[t._v("文档注释\n在我们编写代码是应该写明白注释，这对于后期维护，后期别人接手，自己回炉有很大的帮助。")])])]),t._v(" "),a("h3",{attrs:{id:"java关键字有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java关键字有哪些"}},[t._v("#")]),t._v(" java关键字有哪些？")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("分类")]),t._v(" "),a("th",[t._v("关键字")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("访问控制")]),t._v(" "),a("td",[t._v("private,public, protected")])]),t._v(" "),a("tr",[a("td",[t._v("类，方法和变量修饰符")]),t._v(" "),a("td",[t._v("abstract,class,extends, final, implements, interface, native")])]),t._v(" "),a("tr",[a("td",[t._v("程序控制")]),t._v(" "),a("td",[t._v("break ,continue,return, do,\twhile\t,if ,else")])]),t._v(" "),a("tr",[a("td",[t._v("错误处理")]),t._v(" "),a("td",[t._v("try, catch, throw ,throws\t,finally")])]),t._v(" "),a("tr",[a("td",[t._v("基本类型")]),t._v(" "),a("td",[t._v("boolean,byte,char,double,float,int\t,long ,short")])]),t._v(" "),a("tr",[a("td",[t._v("保留字")]),t._v(" "),a("td",[t._v("goto ,const")])])])]),t._v(" "),a("h3",{attrs:{id:"自增自减"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自增自减"}},[t._v("#")]),t._v(" ++/-- 自增自减")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("自增自减")]),t._v(" "),a("p",[t._v("++ 和 -- 运算符可以放在变量之前，也可以放在变量之后，当运算符放在变量之前时(前缀)，先自增/减，再赋值；当运算符放在变量之后时(后缀)，先赋值，再自增/减。例如，当 b = ++a 时，先自增（自己增加 1），再赋值（赋值给 b）；当 b = a++ 时，先赋值(赋值给 b)，再自增（自己增加 1）。也就是，++a 输出的是 a+1 的值，a++输出的是 a 值。用一句口诀就是：“符号在前就先加/减，符号在后就后加/减”。")])]),t._v(" "),a("h2",{attrs:{id:"基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本数据类型"}},[t._v("#")]),t._v(" 基本数据类型")]),t._v(" "),a("h3",{attrs:{id:"java有几种基本数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java有几种基本数据类型"}},[t._v("#")]),t._v(" java有几种基本数据类型?")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("基本数据类型")]),t._v(" "),a("p",[t._v("java中有8种基本数据类型。")]),t._v(" "),a("ul",[a("li",[t._v("6 种数字类型：")])]),t._v(" "),a("ol",[a("li",[t._v("4 种整数型：byte、short、int、long")]),t._v(" "),a("li",[t._v("2 种浮点型：float、double")])]),t._v(" "),a("ul",[a("li",[t._v("1 种字符类型：char")]),t._v(" "),a("li",[t._v("1 种布尔型：boolean")])])]),t._v(" "),a("ul",[a("li",[t._v("8中基本类型默认值及所占空间")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("基本类型")]),t._v(" "),a("th",[t._v("位数")]),t._v(" "),a("th",[t._v("字节")]),t._v(" "),a("th",[t._v("默认值")]),t._v(" "),a("th",[t._v("取值范围")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("byte")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("-128 ~ 127")])]),t._v(" "),a("tr",[a("td",[t._v("short")]),t._v(" "),a("td",[t._v("16")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("-32768 ~ 32767")])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("32")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("0")]),t._v(" "),a("td",[t._v("-2147483648 ~  2147483647")])]),t._v(" "),a("tr",[a("td",[t._v("long")]),t._v(" "),a("td",[t._v("64")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("0L")]),t._v(" "),a("td",[t._v("-9223372036854775808 ~ 9223372036854775807")])]),t._v(" "),a("tr",[a("td",[t._v("char")]),t._v(" "),a("td",[t._v("16")]),t._v(" "),a("td",[t._v("2")]),t._v(" "),a("td",[t._v("'u0000'")]),t._v(" "),a("td",[t._v("0 ~ 65535")])]),t._v(" "),a("tr",[a("td",[t._v("float")]),t._v(" "),a("td",[t._v("32")]),t._v(" "),a("td",[t._v("4")]),t._v(" "),a("td",[t._v("0f")]),t._v(" "),a("td",[t._v("1.4E-45 ~ 3.4028235E38")])]),t._v(" "),a("tr",[a("td",[t._v("double")]),t._v(" "),a("td",[t._v("64")]),t._v(" "),a("td",[t._v("8")]),t._v(" "),a("td",[t._v("0d")]),t._v(" "),a("td",[t._v("4.9E-324 ~ 1.7976931348623157E308")])]),t._v(" "),a("tr",[a("td",[t._v("boolean")]),t._v(" "),a("td",[t._v("1")]),t._v(" "),a("td",[t._v("false")]),t._v(" "),a("td",[t._v("true")]),t._v(" "),a("td",[t._v("false")])])])]),t._v(" "),a("p",[t._v("这八种基本类型都有对应的包装类分别为：Byte、Short、Integer、Long、Float、Double、Character、Boolean")]),t._v(" "),a("h3",{attrs:{id:"基本类型和包装类的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本类型和包装类的区别"}},[t._v("#")]),t._v(" 基本类型和包装类的区别")]),t._v(" "),a("ul",[a("li",[t._v("包装类型不赋值就是 null ，而基本类型有默认值且不是 null。")]),t._v(" "),a("li",[t._v("包装类型可用于泛型，而基本类型不可以。")]),t._v(" "),a("li",[t._v("基本数据类型的局部变量存放在 Java 虚拟机栈中的局部变量表中，基本数据类型的成员变量（未被 static 修饰 ）存放在 Java 虚拟机的堆中。包装类型属于对象类型，我们知道几乎所有对象实例都存在于堆中。")]),t._v(" "),a("li",[t._v("相比于对象类型， 基本数据类型占用的空间非常小。")])]),t._v(" "),a("h3",{attrs:{id:"自动装箱与拆箱了解吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自动装箱与拆箱了解吗"}},[t._v("#")]),t._v(" 自动装箱与拆箱了解吗？")]),t._v(" "),a("ul",[a("li",[t._v("装箱：将基本类型用它们对应的引用类型包装起来；")]),t._v(" "),a("li",[t._v("拆箱：将包装类型转换为基本数据类型；"),a("br"),t._v("\n举例：")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Integer")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//装箱")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//拆箱")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("h2",{attrs:{id:"参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://snailclimb.gitee.io/javaguide/#/docs/java/basis/java-basic-questions-01?id=%e5%9f%ba%e7%a1%80%e6%a6%82%e5%bf%b5%e4%b8%8e%e5%b8%b8%e8%af%86"}},[t._v("https://snailclimb.gitee.io/javaguide/#/docs/java/basis/java-basic-questions-01?id=%e5%9f%ba%e7%a1%80%e6%a6%82%e5%bf%b5%e4%b8%8e%e5%b8%b8%e8%af%86")])])])}),[],!1,null,null,null);a.default=s.exports}}]);